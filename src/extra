.nav{
  position: fixed;
  height: 100%;
  width: 200px;
  z-index: 1;
  top: 3.4em;
  overflow-x: hidden;
  padding-top: 10px;
}

.nav-icon{
  position: relative;
  width: 20px;
  align-items:center;
  padding: 10px;  
  font-size: 20px;
}
a:link, a:visited, a:hover{
  background-color: black;
  color: white;
  text-decoration: none;
}

a:active{
  background-color: blue;
  color: white;
  text-decoration: none;
}

.container-out{
  width: 100%;
  height: 100%;
}

.container-out .homepage-container{
  width: 90%;
  height: 80%;
  padding-bottom: 60px;
  
}

.name-pane{
  width: 100%;
  padding: 1rem;
  text-align: center;
  color:white;
  background: black;
  display: inline-block;
}

.pic-pane{
  width: 40%;
  height: auto; 
  padding: 3rem;
  left: 3rem;
  text-align:center;
}
.picture{
  border-radius: 50%;
  border: 5px solid; 
  border-color: white;
}

move: {
        direction: "none",
        enable: true,
        outMode: "bounce",
        random: false,
        speed: 3,
        straight: false,
        out_mode: "out",
        bounce: false,
        attract: {
          enable: false,
          rotateX: 600,
          rotateY: 1200
        }
      },
links: {
        color: "#ffffff",
        distance: 150,
        enable: true,
        opacity: 0.5,
        width: 1,
      },
      collisions: {
        enable: true,
      },
___________________________________________________________________________________________
import React, { Component } from 'react';
import { BrowserRouter as Router, Route, Link} from "react-router-dom";
import styled from "styled-components";

const StyledSideNav = styled.div`
  height: 70px;
  width: 200px; 
  padding-left:1rem;
  padding-top: 3rem;
  margin-bottom: 0;
  justify-content:space-around;   
  text-decoration: none;
  a {
    font-size: 2.7em;
    :hover {
      opacity: 0.7; 
    } 
  }
`;

class NavItem extends React.Component {
  handleClick = () => {
    const { path, onItemClick } = this.props;
    onItemClick(path);
  }
  render() {
    const { active } = this.props;
    return (
      <div active={active}>
        <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>
          <div className="nav-icon">{this.props.name}</div>
        </Link>
      </div>
    )
  }
}

export class Navigation extends Component {
    constructor(props) {
      super(props);
      this.state = {
        activePath: "/",
        items: [
          {
            path: '/', name: 'Home', css: 'fas fa-fw fa-home', key: 1 
          },
          { 
            path: '/about', name: 'About', css: 'fas fa-fw fa-user', key: 2
          },
          {
            path: '/cv', name: 'CV', css: 'fas fa-fw fa-file', key: 3
          },
          {
            path: '/project', name: 'Projects', css: 'fas fa-fw fa-archive', key: 4
          },
          {
            path: '/contact', name: 'Contact', css: 'fas fa-fw fa-envelope', key: 5
          }
        ]
      }  
    }
    onItemClick = (path) => {
      this.setState({ activePath: path }); 
    }
    render() {
      const {items, activePath} = this.state
        return (
          <div className="nav">
            <StyledSideNav>
            {
              items.map((item) => {
                return (
                  <NavItem path={item.path} name={item.name} css={item.css} onItemClick={this.onItemClick} active={item.path === activePath} key={item.key}/>
                )
              })
            }
          </StyledSideNav>
        </div>
        )
    }
}

export default Navigation

.sidebar-item:link, .sidebar-item:visited{
  color: white;
  text-decoration: none;
}

.sidebar-item:hover{
  filter: grayscale(0%) opacity(1);
  background-color: #e26120;
  color: white;
}

.sidebar-item:active{
  background-color: #e26120;
  color: white;
  text-decoration: none;
}

springConfig={ presets.wobbly }